from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql.sqltypes
from alembic import op

"""init schema

Revision ID: 9cbb89a47aa4
Revises:
Create Date: 2024-11-19 13:34:28.727819

"""

# revision identifiers, used by Alembic.
revision: str = "9cbb89a47aa4"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "team",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("headquarters", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_team_name"), "team", ["name"], unique=False)
    op.create_table(
        "hero",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("secret_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("team_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["team.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("secret_name"),
    )
    op.create_index(op.f("ix_hero_name"), "hero", ["name"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_hero_name"), table_name="hero")
    op.drop_table("hero")
    op.drop_index(op.f("ix_team_name"), table_name="team")
    op.drop_table("team")
    # ### end Alembic commands ###
