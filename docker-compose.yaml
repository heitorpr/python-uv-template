services:
  db:
    image: postgres:latest
    restart: always
    container_name: uv-template-db
    ports:
      - "${DB_PORT}"
    volumes:
      - uv-template-db-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - uv-template-net
  backend:
    image: uv-template-backend:latest
    build:
      context: .
    restart: always
    container_name: uv-template-backend
    tty: true
    env_file:
      - .env
    ports:
      - ${APP_PORT}:8000
    volumes:
      - "./app:/app/app:delegated"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - uv-template-net
  pgadmin:
    image: dpage/pgadmin4
    profiles: [debug, pgadmin]
    container_name: uv-template-pgadmin
    restart: always
    ports:
      - 5050:80
    volumes:
      - ./observability/pgadmin/pgadmin_servers.json:/pgadmin4/servers.json
      - uv-template-pgadmin-data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@uv.com
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    depends_on:
      db:
        condition: service_healthy
    user: root
    networks:
      - uv-template-net

volumes:
  uv-template-db-data:
  uv-template-pgadmin-data:


networks:
  uv-template-net:
    driver: bridge
